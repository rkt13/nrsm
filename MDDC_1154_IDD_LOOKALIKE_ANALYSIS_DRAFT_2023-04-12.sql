-- SET TIME PERIOD
-- NOTE MCOST EXTRACT IS SPECIFIC TO CY21 - ADD TRANSFER LATER

DROP TABLE IF EXISTS IDD_RUN;
CREATE TABLE IDD_RUN AS 
SELECT
  '2021-01-01'::TIMESTAMP AS START_DT,
  '2021-12-31'::TIMESTAMP AS END_DT,
  CURRENT_DATE() AS RUN_DT
;

-- LOAD IN CODE TABLE
DROP TABLE IF EXISTS IDD_OPWDD_REF;
CREATE LOCAL TEMPORARY TABLE IDD_OPWDD_REF (
  CODE_TYPE VARCHAR(10),
  CODE VARCHAR(10)
) ON COMMIT PRESERVE ROWS;

COPY IDD_OPWDD_REF FROM LOCAL 'C:\Users\rjaeger\Documents\IDD Lookalikes\IDD_LOOKALIKE_REF.csv' PARSER fcsvparser(type='traditional', header=true);

-- ------------------------------------------------------------------
-- ---- MCOST CLAIMS TRANSFER: HPDW --> VPDW
-- ------------------------------------------------------------------
-- -- VPDW
-- DROP TABLE IF EXISTS MCOST_CLAIMS_CY21;
-- CREATE TABLE MCOST_CLAIMS_CY21 (
--     TCN varchar(16),
--     MBR_ID varchar(11),
--     SRV_DT timestamp,
--     CLAIM_TRANS_SRC_CD varchar(10),
--     Telehealth_IND int,
--     Primary_Care_IND int,
--     Mental_Health_Substance_Use_Disorder_IND int,
--     LEVEL_0_CATEGORY varchar(13),
--     LEVEL_1_CATEGORY varchar(20),
--     FFS_PD numeric(26,8),
--     MC_PD numeric(20,2)
-- );
-- 
-- -- HPDW
-- CONNECT TO VERTICA vpdw USER RJAEGER PASSWORD 'PASSWORD' ON 'vpwprddwvi01.miscny.nyenet',5433;
-- EXPORT TO VERTICA vpdw.RJAEGER.MCOST_CLAIMS_CY21 AS
-- SELECT * FROM RZJ02.MCOST_CLAIMS WHERE SRV_DT BETWEEN '2021-01-01' AND '2021-12-31';
-- 
-- --VPDW
-- SELECT COUNT(*) FROM RJAEGER.MCOST_CLAIMS_CY21;

------------------------------------------------------------------
--- CREATE COHORTS (IDD LOOKALIKES AND OPWDD WAIVER MEMBERS)
------------------------------------------------------------------

---- IDENTIFY MEMBERS WITH ANY LENGTH OF OPWDD HCBS WAIVER DURING CY2021----------
DROP TABLE IF EXISTS OPWDD_EXC;
CREATE TABLE OPWDD_EXC AS 
SELECT
  MBR_ID, 
  MBR_EXC_CD,
  EXC_BEG_DT, 
  EXC_END_DT
FROM MISOWN.MBR_EXC
WHERE 
  MBR_EXC_CD IN ('95', '46') AND 
  EXC_BEG_DT <= (SELECT END_DT FROM IDD_RUN) AND EXC_END_DT >= (SELECT START_DT FROM IDD_RUN) AND
  EXC_STATUS_CD = 1 AND
  LATEST_TRANS_IND = 'Y' 
;

---- IDENTIFY MEMBERS WITH AT LEAST ONE IDD DIAGNOSIS ON ANY CLAIM IN CY2021 ----
DROP TABLE IF EXISTS IDD_DX_MEMBERS;
CREATE TABLE IDD_DX_MEMBERS AS
SELECT
  CT.MBR_ID,
  COUNT(DISTINCT TCN) AS N_TCN,
  COUNT(DISTINCT CT.CLAIM_TRANS_ID) AS N_CTID,
  COUNT(DISTINCT SRV_DT) AS N_SRV_DT
FROM 
  (SELECT 
    CLAIM_TRANS_ID 
   FROM MISOWN.CLAIM_DX
   WHERE
    DX_CD IN (SELECT CODE FROM IDD_OPWDD_REF WHERE CODE_TYPE = 'IDD-DX') AND 
    SRV_DT BETWEEN (SELECT START_DT FROM IDD_RUN) AND (SELECT END_DT FROM IDD_RUN)
  ) DX
JOIN MISOWN.CLAIM_TRANS CT
  ON DX.CLAIM_TRANS_ID = CT.CLAIM_TRANS_ID  
WHERE
  CT.SRV_DT BETWEEN (SELECT START_DT FROM IDD_RUN) AND (SELECT END_DT FROM IDD_RUN) AND 
  LATEST_TRANS_IND = 'Y'
GROUP BY 1
;

---- IDD LOOKALIKE COHORT: AT LEAST ONE IDD DX, NEVER OPWDD EXCLUSION CODE, OVER 21 FOR ENTIRE CY2021
DROP TABLE IF EXISTS IDD_LOOKALIKE_COHORT;
CREATE TABLE IDD_LOOKALIKE_COHORT AS
SELECT
  MBR_ID,
  N_TCN   
FROM IDD_DX_MEMBERS
WHERE
  MBR_ID NOT IN (SELECT MBR_ID FROM OPWDD_EXC) AND --NOT AFFILIATED WITH OPWDD
  MBR_ID NOT IN (SELECT MBR_ID FROM DATABOOK.MA_ENROLLMENT_V3 WHERE CALENDAR_DATE BETWEEN (SELECT START_DT FROM IDD_RUN) AND (SELECT END_DT FROM IDD_RUN) AND MBR_AGE < 21) -- AGE 21+
GROUP BY 1,2;

---- OPWDD COHORT: OPWDD EXCLUSION CODE, OVER 21 FOR ENTIRE CY2021 ----
DROP TABLE IF EXISTS OPWDD_COHORT;
CREATE TABLE OPWDD_COHORT AS
SELECT
  DISTINCT MBR_ID
FROM OPWDD_EXC
WHERE
  MBR_ID NOT IN (SELECT MBR_ID FROM DATABOOK.MA_ENROLLMENT_V3 WHERE CALENDAR_DATE BETWEEN (SELECT START_DT FROM IDD_RUN) AND (SELECT END_DT FROM IDD_RUN) AND MBR_AGE < 21) -- AGE 21+
;

------------------------------------------------------------------
--- PULL ENROLLMENT/COVERAGE DATA FOR COHORT/COMPARISON
------------------------------------------------------------------

DROP TABLE IF EXISTS IDD_OPWDD_BASE; 
CREATE TABLE IDD_OPWDD_BASE AS 
SELECT
	BASE.MBR_ID,
	CASE WHEN A.MBR_ID IS NOT NULL THEN 1 ELSE 0 END AS COHORT_IND,
	CASE WHEN B.MBR_ID IS NOT NULL THEN 1 ELSE 0 END AS COMPARISON_IND,
	BASE.DUAL_IND,
	BASE.MA_ENROLLMENT_CNTR AS MEMBER_MONTHS,
	BASE.CALENDAR_DATE,
	MAE.MBR_AGE,
	MAE.MBR_SEX_DESC,
	MAE.RACE_DESCRIPTION,
	MAE.MC_FFS,
	MAE.PLAN_NAME_STD,
	MAE.PLAN_TYPE,
	MAE.PLAN_GROUP,
	MAE.ENROLLMENT,
	MAE.MBR_AID_CATG_GRP,
	MAE.MBR_AID_CATG_DESC,
	MAE.MBR_COUNTY_CD,
	MAE.MBR_FISCAL_COUNTY,
	MAE.MBR_POSTAL_CD,
	MAE.HH_IND,
	MAE.GROUP_IND,
	TCC.ACT_ER_AMT,
	TCC.ACT_IP_ADMIT_AMT,
	TCC.ACT_IP_ADMIT_CNT,
	TCC.ACT_OUTPAT_AMT,
	TCC.ACT_PHARM_AMT,
	TCC.ACT_PROF_AMT,
	TCC.ACT_SNF_AMT,
	TCC.ACT_PPA_AMT,
	TCC.ACT_PPA_CNT,
	TCC.ACT_PPR_AMT,
	TCC.ACT_PPR_CNT,
	TCC.ACT_PPS_ALLOW_AMT,
	TCC.ACT_PPS_CNT,
	TCC.ACT_PPV_AMT,
	TCC.ACT_PPV_CNT,
	TCC.ACT_TOT_MEDC_AMT,
	TCC.ACT_TOT_AMT
FROM (
	-- RETRIEVES MOST RECENT ENROLLMENT MONTH
	-- PLUS TOTAL MEMBER MONTHS AND DUAL ELIGIBILITY
	-- (AT ANY TIME DURING THE PERIOD)
	SELECT
		MBR_ID,
		MAX(CALENDAR_DATE) AS CALENDAR_DATE,
		COUNT(*) AS MA_ENROLLMENT_CNTR,
		CASE
			WHEN SUM(CASE WHEN DUAL_IND = 'Dual' THEN 1 ELSE 0 END) > 0 THEN 1
			ELSE 0
		END AS DUAL_IND
	FROM DATABOOK.MA_ENROLLMENT_V3
	WHERE
		CALENDAR_DATE >= (SELECT START_DT FROM IDD_RUN) AND
		CALENDAR_DATE <= (SELECT END_DT FROM IDD_RUN)
	GROUP BY
		1
) BASE
JOIN DATABOOK.MA_ENROLLMENT_V3 MAE
ON
	(MAE.mbr_id, MAE.calendar_date) = (BASE.mbr_id, BASE.calendar_date)
JOIN (
	-- TCC REQUIRED FOR INCLUSION IN M360 REPORT
	-- DEREFERENCE PROG_AUD_ID VIA PROG_AUD REFERENCE TABLE
	SELECT
		PROG_MBR_TCC.*
	FROM PROGOWN.PROG_MBR_TCC PROG_MBR_TCC
	JOIN PROGOWN.PROG_AUD PROG_AUD
	ON
		PROG_MBR_TCC.PROG_AUD_ID = PROG_AUD.PROG_AUD_ID
	WHERE
		PROG_AUD.LATEST_MSR_PER_AUD_IND = 'Y' AND
		PROG_MBR_TCC.CRG_MODEL = 'Q' AND
		PROG_MBR_TCC.PRICE_TYPE_CD = 'REAL' AND
		PROG_MBR_TCC.MCAID_PROG_TYPE_CD = 'STATEWIDE' AND
		PROG_AUD.SRV_END_DT =  (SELECT END_DT FROM IDD_RUN)
) TCC
ON
	TCC.MBR_ID = BASE.MBR_ID
LEFT JOIN (SELECT DISTINCT MBR_ID FROM IDD_LOOKALIKE_COHORT) A ON BASE.MBR_ID = A.MBR_ID

LEFT JOIN (SELECT DISTINCT MBR_ID FROM OPWDD_COHORT) B ON BASE.MBR_ID = B.MBR_ID
;

-- 123,190 IDD LOOKALIKES IDENTIFIED
-- 76,397 OPWDD WAIVER MEMBERS IDENTIFIED

SELECT 
  COHORT_IND,
  COMPARISON_IND,
  COUNT(*)
FROM IDD_OPWDD_BASE
GROUP BY 1,2;

--OUTPUT 1: ENROLLMENT/DENOMINATOR
SELECT
  CASE WHEN COHORT_IND = 1 THEN 'IDD LOOKALIKE' ELSE 'OPWDD' END AS GROUP,
  DUAL_IND,
  MC_FFS,
  ENROLLMENT,
  PLAN_NAME_STD,
  COUNT(*) AS N,
  SUM(MEMBER_MONTHS) AS MM
FROM IDD_OPWDD_BASE
WHERE
  (COHORT_IND = 1 OR COMPARISON_IND = 1)
GROUP BY 1,2,3,4,5;

------------------------------------------------------
--- SPEND BY COS + OPWDD WAIVER SERVICES
------------------------------------------------------

----- IDENTIFY ALL TCNS THAT INCLUDE ONE OF THE OPWDD WAIVER RATE CODES
DROP TABLE IF EXISTS HCBS_WAIVER_TCN;
CREATE TABLE HCBS_WAIVER_TCN AS 
SELECT
  DISTINCT TCN
FROM MISOWN.CLAIM_TRANS CT
JOIN IDD_OPWDD_REF REF
  ON CT.RATE_CD = REF.CODE AND REF.CODE_TYPE = 'OPWDD-RATE'
WHERE
  LATEST_TRANS_IND = 'Y' AND
  SRV_DT BETWEEN (SELECT START_DT FROM IDD_RUN) AND (SELECT END_DT FROM IDD_RUN)
;


-- OUTPUT 2: SPEND BY COS
SELECT
  CASE WHEN COHORT_IND = 1 THEN 'IDD LOOKALIKE' ELSE 'OPWDD' END AS GROUP,
  BASE.DUAL_IND,
  BASE.MC_FFS,
  BASE.ENROLLMENT,
  CASE WHEN HCBS.TCN IS NOT NULL THEN 'OPWDD WAIVER SERVICE' ELSE LEVEL_1_CATEGORY END AS CATEGORY,
  CLAIM_TRANS_SRC_CD,
  COUNT(DISTINCT MCOST.TCN) AS N_CLAIMS,
  SUM(NVL(FFS_PD,0) + NVL(MC_PD,0)) AS TOT_PD
FROM IDD_OPWDD_BASE BASE
JOIN RJAEGER.MCOST_CLAIMS_CY21 MCOST
  ON BASE.MBR_ID = MCOST.MBR_ID
LEFT JOIN HCBS_WAIVER_TCN HCBS
  ON MCOST.TCN = HCBS.TCN
WHERE
  (COHORT_IND = 1 OR COMPARISON_IND = 1)
GROUP BY 1,2,3,4,5,6;


-- OUTPUT 3: OPWDD SERVICES BY RATE
SELECT
  CASE WHEN COHORT_IND = 1 THEN 'IDD LOOKALIKE' ELSE 'OPWDD' END AS GROUP,
  BASE.DUAL_IND,  
  CT.RATE_CD,
  REF_RATE.RATE_DESC,
  COUNT(*) AS LINES,
  SUM(NET_PD_AMT_WITHOUT_PGP) AS TOT_PD
FROM MISOWN.CLAIM_TRANS CT
JOIN IDD_OPWDD_BASE BASE
  ON CT.MBR_ID = BASE.MBR_ID
JOIN IDD_OPWDD_REF REF
  ON CT.RATE_CD = REF.CODE AND REF.CODE_TYPE = 'OPWDD-RATE'
LEFT JOIN MISOWN.REF_RATE_CD REF_RATE
  ON REF_RATE.RATE_CD = CT.RATE_CD
WHERE
  LATEST_TRANS_IND = 'Y' AND
  CLAIM_TRANS_SRC_CD = 'C' AND
  SRV_DT BETWEEN (SELECT START_DT FROM IDD_RUN) AND (SELECT END_DT FROM IDD_RUN) AND
  (COHORT_IND = 1 OR COMPARISON_IND = 1)
GROUP BY 1,2,3,4;


------------------------------------------------
--- CHRONIC CONDITIONS - NERVOUS SYSTEM/DD FOCUS
------------------------------------------------

-- OUTPUT #4 - PREVALENCE BY EDC
SELECT
  CASE WHEN BASE.COHORT_IND = 1 THEN 'IDD LOOKALIKE' ELSE 'OPWDD' END AS GROUP,
  BASE.DUAL_IND,
  BASE.MC_FFS,
  BASE.ENROLLMENT,
  EDC.EDC_CD,
  REF.EDC_DESC,
  EDC.MDC_CD,
  REF.MDC_DESC,
  CASE 
    WHEN EDC.EDC_TYPE_CD = 'C' THEN 'Chronic'
    WHEN EDC.EDC_TYPE_CD = 'MC' THEN 'Major Chronic'
    WHEN EDC.EDC_TYPE_CD = 'DC' THEN 'Dominant Chronic'
    END AS EDC_TYPE ,
  COUNT(DISTINCT BASE.MBR_ID) AS N
FROM PROGOWN.MMM_MBR_EDC EDC
JOIN IDD_OPWDD_BASE BASE 
  ON EDC.MBR_ID = BASE.MBR_ID
LEFT JOIN PMQIDEV.REF_CRG_EDC_MDC REF
  ON EDC.EDC_CD = REF.EDC_CD AND
     REF.CRG_GRPR_VERSION = '2.10'
WHERE
  PER_END_DT = (SELECT END_DT FROM IDD_RUN) AND
  EDC.MDC_CD IN ('011', '152') AND --MDCS ASSOCIATED WITH QUALIFYING CONDITIONS FOR OPWDD
  EDC_TYPE_CD IN ('C', 'DC', 'MC') AND
  (BASE.COHORT_IND = 1 OR BASE.COMPARISON_IND = 1)
GROUP BY 1,2,3,4,5,6,7,8,9
ORDER BY 9 DESC;

-----------------------------------------------------
--- CCO/HH ENROLLMENT
-----------------------------------------------------

-- IDENTIFY MEMBERS WITH CCO/HH EXC CODE AT ANY POINT IN YEAR
DROP TABLE IF EXISTS CCO_HH_SPANS;
CREATE LOCAL TEMPORARY TABLE CCO_HH_SPANS 
ON COMMIT PRESERVE ROWS AS 
SELECT
  MBR_ID,
  MBR_EXC_CD,
  PROV_ID,
  EXC_BEG_DT,
  EXC_END_DT
FROM MISOWN.MBR_EXC
WHERE
  LATEST_TRANS_IND = 'Y' AND
  EXC_STATUS_CD = 1 AND 
  EXC_BEG_DT <= (SELECT END_DT FROM IDD_RUN) AND EXC_END_DT >= (SELECT START_DT FROM IDD_RUN) AND
  MBR_EXC_CD IN ('I5', 'I6', 'I7', 'I8', 'I9')  
;

-- OUTPUT #5: CCO/HH ENROLLMENT 
SELECT
  CASE WHEN COHORT_IND = 1 THEN 'IDD LOOKALIKE'
       WHEN COMPARISON_IND = 1 THEN 'OPWDD'
       ELSE 'OTHER' END AS GROUP,
  DUAL_IND,
  MBR_EXC_CD,
  X.PROV_ID,
  PROV_NAME,
  COUNT(*) AS N
FROM (
  -- LIMIT TO LATEST CCO/HH SPAN IN TIME PERIOD 
  SELECT 
    *,
    ROW_NUMBER() OVER (PARTITION BY MBR_ID ORDER BY EXC_BEG_DT DESC, EXC_END_DT DESC) AS SPAN_NUM
  FROM CCO_HH_SPANS
  ORDER BY MBR_ID, EXC_BEG_DT, EXC_END_DT
  ) X
JOIN IDD_OPWDD_BASE BASE
  ON X.MBR_ID = BASE.MBR_ID
LEFT JOIN MISOWN.PROV_NAME 
  ON PROV_NAME.PROV_ID = X.PROV_ID AND
     PROV_NAME_TYPE_CD = 'P'
WHERE
  X.SPAN_NUM = 1
GROUP BY 1,2,3,4,5;
